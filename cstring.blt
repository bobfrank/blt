strlen = extern "C" (const char* str)
                 => (int count) {{strlen}};

memcpy = extern "C" (const void* dest, const void* src, unsigned int size)
                 => (int count) {{memcpy}};

class parray
{
    init;
    del;
    append(int item);
}

// $ means external object... not sure what it is... the language handler will
// deal with the object and we'll keep it as a pointer basically, but with some type
// saftey
$PARRAY parray::data;

parray::init
    : data( self.setup )
{
}
// like with c, you must add the python library in the command line to compile...

// compiler must make sure del and init are never private
parray::del
{
    delete data;
}

// second form of extern syntax if you want to add some variables...
parray::append(int item)
        = extern "Python" ($PARRAY array=self.data, int item=item) {{ array.append(item) }}

// no using self if called from init... maybe
parray::setup = extern "Python" => ($PARRAY) {{ [] }}
